.. _todo:

To-Do List
==========

.. currentmodule:: gobpersist

* Make many-to-many mappings work without explicit pivot tables.
  :attr:`gob.Gob.set_consistency` is a start...
* :meth:`session.GobTranslator.retrieve_to_myretrieve` -- should take
  a list of tuples (identifiers) rather than a list of scalars, as one
  may want to calculate on foreign fields.
* :meth:`session.GobTranslator.mygob_to_gob` incorrectly assumes that
  no translation is needed.  This is the cause of the current
  uselessness of the `name` parameter on field creation.
* :meth:`session.Session.`\
  `add`/`update`/`delete`/`add_collection`/`remove_collection`/`rollback` +
  `paused_transactions` + :meth:`field.Field.dirty` all assume a lot
  of na√Øve things, along the same lines as, e.g., that the same item
  will never be added and subsequently deleted without committing the
  transaction.  Basically, the transaction engine works for the basic
  cases, but is fundamentally fubar.  However, there is a certain
  simplicity to this implementation that is attractive, so it's not a
  settled situation whether it should be changed or not.
* Deduplicated gobs in :class:`session.Session` ought to be locally
  queried and otherwise removed from query results in order to
  maintain transaction consistency.
* :meth:`session.Session.commit` will create conditions for a commit
  based on revision tags, but there is currently no way to call
  :meth:`commit` with a caller-set list of conditions.
* Provide a symmetry between :meth:`session.StorageEngine.upload_iter`
  and upload, so that storage engines can choose whichever is more
  convenient to implement.
* Orderings ought to be able to handle quantified values.
* Create a generic file storage engine.
* Move more of the key handling features of the back end into
  session.commit()

Tokyo Tyrant
------------

* Key range queries should be possible.
* More particulars of B+ databases should be taken advantage of.
* The current implementation is probably ideal for hash dbs, so maybe
  we fork it to :class:`TokyoTyrantHash` and
  :class:`TokyoTyrantBPlus`?

.. This file is an rst text file identical to what's in the
   documentation
